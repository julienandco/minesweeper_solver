set(hyper_res).
assign(max_proofs,-1).

% Lenguaje del Problema
%
% Propiedades:
% - filas(x): Hay x filas en la cuadricúla
% - columnas(x): Hay x columnas en la cuadricúla
% - sensorH(x,y,z): En la casilla de coordenadas (x,y) hay un sensor H que detecta z bombas
% - sensorV(x,y,z): En la casilla de coordenadas (x,y) hay un sensor V que detecta z bombas
% - bomba(x,y): Hay una bomba en la casilla de coordenadas (x,y)
% - vacio(x,y): La casilla de coordenas (x,y) está vacía
%

make_evaluable(_>_, $GT(_,_)).
make_evaluable(_<_, $LT(_,_)).
make_evaluable(_<=_, $LE(_,_)).
make_evaluable(_+_, $SUM(_,_)).
make_evaluable(_-_, $DIFF(_,_)).

formula_list(usable).
    % Cada celda solo puede tener un estado
    all x y z (vacio(x,y) -> (-bomba(x,y) & -sensorV(x,y,z) & -sensorH(x,y,z))).
    all x y z (bomba(x,y) -> (-vacio(x,y) & -sensorV(x,y,z) & -sensorH(x,y,z))).
    all x y z (sensorV(x,y,z) -> (-vacio(x,y) & -bomba(x,y) & -sensorH(x,y,z))).  
    all x y z (sensorX(x,y,z) -> (-vacio(x,y) & -bomba(x,y) & -sensorV(x,y,z))).  
end_of_list.

formula_list(sos).
    % Situación inicial.
    filas(5).
    columnas(5).
    sensorV(3,2,0).
    sensorH(1,3,2).
    sensorV(4,3,3).
    sensorH(2,2,1).
    sensorV(5,5,2).
    sensorH(4,1,0).
    sensorV(1,1,2).
end_of_list.

formula_list(passive).
    % Cada vez que encontramos a una bomba, la devolvemos como respuesta.
    all x y (bomba(x,y) -> $ANS(bomba(x,y))).
end_of_list.
