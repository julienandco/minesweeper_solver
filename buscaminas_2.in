set(hyper_res).
%set(neg_hyper_res).
assign(max_proofs,-1).

% Lenguaje del Problema
%
% Propiedades:
% - filas(x): Hay x filas en la cuadricúla
% - columnas(x): Hay x columnas en la cuadricúla
% - sensorH(x,y,z): En la casilla de coordenadas (x,y) hay un sensor H que detecta z bombas
% - sensorV(x,y,z): En la casilla de coordenadas (x,y) hay un sensor V que detecta z bombas
% - bomba(x,y): Hay una bomba en la casilla de coordenadas (x,y)
% - vacio(x,y): La casilla de coordenas (x,y) está vacía
%

make_evaluable(_>_, $GT(_,_)).
make_evaluable(_<_, $LT(_,_)).
make_evaluable(_<=_, $LE(_,_)).
make_evaluable(_+_, $SUM(_,_)).
make_evaluable(_-_, $DIFF(_,_)).

list(demodulators).
    pertenece(x,[]) = $F.
    pertenece(x,[y|w]) = $IF($ID(x,y), $T, pertenece(x,w)).
end_of_list.

formula_list(usable).
    % Sensores que no detectan nada
    all x y f (filas(f) & sensorV(x,y,0) -> vaciarColumna(y,f)).
    all x y c (columnas(c) & sensorH(x,y,0) -> vaciarFila(x,c)).

    all f c (vaciarColumna(c,f) & f > 0 -> vacio(f,c) & vaciarColumna(c,f-1)).
    all f c (vaciarFila(f,c) & c > 0 -> vacio(f,c) & vaciarFila(f,c-1)).

    % Sensores que detectan algo
    all x y z f (filas(f) & sensorV(x,y,z) & z > 0 -> bombasImposiblesEnColumnaTemp(y, [x], f-1)).
    all a b c n x z ((bombasImposiblesEnColumnaTemp(c, [a|b], n) & n > 0 & (sensorH(x,c,z) | sensorV(x,c,z)) & -pertenece(x,[a|b])) -> bombasImposiblesEnColumnaTemp(c, [x,a|b], n-1)).

    %(exists a b (vacio(a,b))) -> kek.

    %TODO: WICHTIG1111111
    %bombasImposiblesEnColumnaTemp GIBT UNS JZ AN LETZTER STELLE DIE ANZAHL MÖGLICHER BOMBEN AN
    % -> WENN ES EINEN SENSOR GIBT, DER GENAUSO VIELE BOMBEN DETECTED, WIE MÖGLICH SIND,
    % DANN IST DAS UNSER ÄQUIVALENT ZU DEM AUS BUSCA1: ALLES UM DICH RUM SIND BOMBEN!

    % TODO: das kickt nie, weil wir nie f sensoren in einer ganzen column haben, wenn sensor was entdeckt hat
    %all a b c (bombasImposiblesEnColumnaTemp(c, [a|b], 0) -> bombasImposiblesEnColumna(c, [a|b])).

    % kann ich so coden: wenn alle sensoren in liste, dann nicht-temp liste assert?

    %IDEE: pro sensor eine liste von möglichen aufbauen (für die reihe/spalte)
    %BRUH: iwie lösen, dass ich eine komplette reihe vernullen will, wenn sensor nichts findet  
end_of_list.

formula_list(sos).
    % Situación inicial.
    filas(5).
    columnas(5).
    sensorV(3,2,0).
    sensorH(1,3,2).
    sensorV(4,3,3).
    sensorH(2,2,1).
    sensorV(5,5,2).
    sensorH(4,1,0).
    sensorV(1,1,2).
end_of_list.

formula_list(passive).
    % Cada vez que encontramos a una bomba, la devolvemos como respuesta.
    all x y (bomba(x,y) -> $ANS(bomba(x,y))).
end_of_list.
