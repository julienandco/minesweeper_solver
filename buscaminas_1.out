----- Otter 3.3f, August 2004 -----
The process was started by julien on Juliens-MacBook-Pro.local,
Wed Dec 14 18:50:47 2022
The command was "../../../otter-3.3f/bin/otter".  The process ID is 9627.

set(hyper_res).
assign(max_proofs,-1).
make_evaluable(_>_,$GT(_,_)).
make_evaluable(_<_,$LT(_,_)).
make_evaluable(_<=_,$LE(_,_)).
make_evaluable(_+_,$SUM(_,_)).
make_evaluable(_-_,$DIFF(_,_)).

formula_list(usable).
all x y z (vacio(x,y)-> -bomba(x,y)& -sensor(x,y,z)).
all x y z (bomba(x,y)-> -vacio(x,y)& -sensor(x,y,z)).
all x y z (sensor(x,y,z)-> -vacio(x,y)& -bomba(x,y)).
sensor(1,1,0)->vacio(1,2)&vacio(2,1).
all f (filas(f)&sensor(f,1,0)->vacio(f-1,1)&vacio(f,2)).
all c (columnas(c)&sensor(1,c,0)->vacio(1,c-1)&vacio(2,c)).
all f c (filas(f)&columnas(c)&sensor(f,c,0)->vacio(f,c-1)&vacio(f-1,c)).
all y c (columnas(c)&y>1&y<c&sensor(1,y,0)->vacio(1,y-1)&vacio(1,y+1)&vacio(2,y)).
all y f c (filas(f)&columnas(c)&y>1&y<c&sensor(f,y,0)->vacio(f,y-1)&vacio(f,y+1)&vacio(f-1,y)).
all x f (filas(f)&x>1&x<f&sensor(x,1,0)->vacio(x-1,1)&vacio(x+1,1)&vacio(x,2)).
all x f c (filas(f)&columnas(c)&x>1&x<f&sensor(x,c,0)->vacio(x-1,c)&vacio(x+1,c)&vacio(x,c-1)).
all x y f c (filas(f)&columnas(c)&x>1&x<f&y>1&y<c&sensor(x,y,0)->vacio(x-1,y)&vacio(x+1,y)&vacio(x,y-1)&vacio(x,y+1)).
sensor(1,1,2)->bomba(1,2)&bomba(2,1).
all f (filas(f)&sensor(f,1,2)->bomba(f-1,1)&bomba(f,2)).
all c (columnas(c)&sensor(1,c,2)->bomba(1,c-1)&bomba(2,c)).
all f c (filas(f)&columnas(c)&sensor(f,c,2)->bomba(f,c-1)&bomba(f-1,c)).
all y c (columnas(c)&y>1&y<c&sensor(1,y,3)->bomba(1,y-1)&bomba(1,y+1)&bomba(2,y)).
all y f c (filas(f)&columnas(c)&y>1&y<c&sensor(f,y,3)->bomba(f,y-1)&bomba(f,y+1)&bomba(f-1,y)).
all x f (filas(f)&x>1&x<f&sensor(x,1,3)->bomba(x-1,1)&bomba(x+1,1)&bomba(x,2)).
all x f c (filas(f)&columnas(c)&x>1&x<f&sensor(x,c,3)->bomba(x-1,c)&bomba(x+1,c)&bomba(x,c-1)).
all x y f c (filas(f)&columnas(c)&x>1&x<f&y>1&y<c&sensor(x,y,4)->bomba(x-1,y)&bomba(x+1,y)&bomba(x,y-1)&bomba(x,y+1)).
sensor(1,1,1)->bomba(1,2)&vacio(2,1)|vacio(1,2)&bomba(2,1).
all f (filas(f)&sensor(f,1,1)->bomba(f-1,1)&vacio(f,2)|vacio(f-1,1)&bomba(f,2)).
all c (columnas(c)&sensor(1,c,1)->bomba(2,c)&vacio(1,c-1)|vacio(2,c)&bomba(1,c-1)).
all f c (filas(f)&columnas(c)&sensor(f,c,1)->bomba(f,c-1)&vacio(f-1,c)|vacio(f,c-1)&bomba(f-1,c)).
all y c (columnas(c)&y>1&y<c&sensor(1,y,1)->bomba(1,y-1)&vacio(1,y+1)&vacio(2,y)|vacio(1,y-1)&bomba(1,y+1)&vacio(2,y)|vacio(1,y-1)&vacio(1,y+1)&bomba(2,y)).
all y f c (filas(f)&columnas(c)&y>1&y<c&sensor(f,y,1)->bomba(f,y-1)&vacio(f,y+1)&vacio(f-1,y)|vacio(f,y-1)&bomba(f,y+1)&vacio(f-1,y)|vacio(f,y-1)&vacio(f,y+1)&bomba(f-1,y)).
all x f (filas(f)&x>1&x<f&sensor(x,1,1)->bomba(x-1,1)&vacio(x+1,1)&vacio(x,2)|vacio(x-1,1)&bomba(x+1,1)&vacio(x,2)|vacio(x-1,1)&vacio(x+1,1)&bomba(x,2)).
all x f c (filas(f)&columnas(c)&x>1&x<f&sensor(x,c,1)->bomba(x-1,c)&vacio(x+1,c)&vacio(x,c-1)|vacio(x-1,c)&bomba(x+1,c)&vacio(x,c-1)|vacio(x-1,c)&vacio(x+1,c)&bomba(x,c-1)).
all y c (columnas(c)&y>1&y<c&sensor(1,y,2)->bomba(1,y-1)&bomba(1,y+1)&vacio(2,y)|bomba(1,y-1)&vacio(1,y+1)&bomba(2,y)|vacio(1,y-1)&bomba(1,y+1)&bomba(2,y)).
all y f c (filas(f)&columnas(c)&y>1&y<c&sensor(f,y,2)->bomba(f,y-1)&bomba(f,y+1)&vacio(f-1,y)|bomba(f,y-1)&vacio(f,y+1)&bomba(f-1,y)|vacio(f,y-1)&bomba(f,y+1)&bomba(f-1,y)).
all x f (filas(f)&x>1&x<f&sensor(x,1,2)->bomba(x-1,1)&bomba(x+1,1)&vacio(x,2)|bomba(x-1,1)&vacio(x+1,1)&bomba(x,2)|vacio(x-1,1)&bomba(x+1,1)&bomba(x,2)).
all x f c (filas(f)&columnas(c)&x>1&x<f&sensor(x,c,2)->bomba(x-1,c)&bomba(x+1,c)&vacio(x,c-1)|bomba(x-1,c)&vacio(x+1,c)&bomba(x,c-1)|vacio(x-1,c)&bomba(x+1,c)&bomba(x,c-1)).
all x y f c (filas(f)&columnas(c)&x>1&x<f&y>1&y<c&sensor(x,y,1)->bomba(x-1,y)&vacio(x+1,y)&vacio(x,y-1)&vacio(x,y+1)|vacio(x-1,y)&bomba(x+1,y)&vacio(x,y-1)&vacio(x,y+1)|vacio(x-1,y)&vacio(x+1,y)&bomba(x,y-1)&vacio(x,y+1)|vacio(x-1,y)&vacio(x+1,y)&vacio(x,y-1)&bomba(x,y+1)).
all x y f c (filas(f)&columnas(c)&x>1&x<f&y>1&y<c&sensor(x,y,2)->bomba(x-1,y)&bomba(x+1,y)&vacio(x,y-1)&vacio(x,y+1)|vacio(x-1,y)&bomba(x+1,y)&bomba(x,y-1)&vacio(x,y+1)|vacio(x-1,y)&vacio(x+1,y)&bomba(x,y-1)&bomba(x,y+1)|bomba(x-1,y)&vacio(x+1,y)&vacio(x,y-1)&bomba(x,y+1)|bomba(x-1,y)&vacio(x+1,y)&bomba(x,y-1)&vacio(x,y+1)|vacio(x-1,y)&bomba(x+1,y)&vacio(x,y-1)&bomba(x,y+1)).
all x y f c (filas(f)&columnas(c)&x>1&x<f&y>1&y<c&sensor(x,y,3)->bomba(x-1,y)&bomba(x+1,y)&bomba(x,y-1)&vacio(x,y+1)|bomba(x-1,y)&bomba(x+1,y)&vacio(x,y-1)&bomba(x,y+1)|bomba(x-1,y)&vacio(x+1,y)&bomba(x,y-1)&bomba(x,y+1)|vacio(x-1,y)&bomba(x+1,y)&bomba(x,y-1)&bomba(x,y+1)).
end_of_list.

-------> usable clausifies to:

list(usable).
1 [] -vacio(x,y)| -bomba(x,y).
2 [] -vacio(x,y)| -sensor(x,y,z).
3 [] -bomba(x,y)| -vacio(x,y).
4 [] -bomba(x,y)| -sensor(x,y,z).
5 [] -sensor(x,y,z)| -vacio(x,y).
6 [] -sensor(x,y,z)| -bomba(x,y).
7 [] -sensor(1,1,0)|vacio(1,2).
8 [] -sensor(1,1,0)|vacio(2,1).
9 [] -filas(x1)| -sensor(x1,1,0)|vacio(x1-1,1).
10 [] -filas(x1)| -sensor(x1,1,0)|vacio(x1,2).
11 [] -columnas(x2)| -sensor(1,x2,0)|vacio(1,x2-1).
12 [] -columnas(x2)| -sensor(1,x2,0)|vacio(2,x2).
13 [] -filas(x3)| -columnas(x4)| -sensor(x3,x4,0)|vacio(x3,x4-1).
14 [] -filas(x3)| -columnas(x4)| -sensor(x3,x4,0)|vacio(x3-1,x4).
15 [] -columnas(x5)| -(y>1)| -(y<x5)| -sensor(1,y,0)|vacio(1,y-1).
16 [] -columnas(x5)| -(y>1)| -(y<x5)| -sensor(1,y,0)|vacio(1,y+1).
17 [] -columnas(x5)| -(y>1)| -(y<x5)| -sensor(1,y,0)|vacio(2,y).
18 [] -filas(x6)| -columnas(x7)| -(y>1)| -(y<x7)| -sensor(x6,y,0)|vacio(x6,y-1).
19 [] -filas(x6)| -columnas(x7)| -(y>1)| -(y<x7)| -sensor(x6,y,0)|vacio(x6,y+1).
20 [] -filas(x6)| -columnas(x7)| -(y>1)| -(y<x7)| -sensor(x6,y,0)|vacio(x6-1,y).
21 [] -filas(x8)| -(x>1)| -(x<x8)| -sensor(x,1,0)|vacio(x-1,1).
22 [] -filas(x8)| -(x>1)| -(x<x8)| -sensor(x,1,0)|vacio(x+1,1).
23 [] -filas(x8)| -(x>1)| -(x<x8)| -sensor(x,1,0)|vacio(x,2).
24 [] -filas(x9)| -columnas(x10)| -(x>1)| -(x<x9)| -sensor(x,x10,0)|vacio(x-1,x10).
25 [] -filas(x9)| -columnas(x10)| -(x>1)| -(x<x9)| -sensor(x,x10,0)|vacio(x+1,x10).
26 [] -filas(x9)| -columnas(x10)| -(x>1)| -(x<x9)| -sensor(x,x10,0)|vacio(x,x10-1).
27 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x-1,y).
28 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x+1,y).
29 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x,y-1).
30 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x,y+1).
31 [] -sensor(1,1,2)|bomba(1,2).
32 [] -sensor(1,1,2)|bomba(2,1).
33 [] -filas(x13)| -sensor(x13,1,2)|bomba(x13-1,1).
34 [] -filas(x13)| -sensor(x13,1,2)|bomba(x13,2).
35 [] -columnas(x14)| -sensor(1,x14,2)|bomba(1,x14-1).
36 [] -columnas(x14)| -sensor(1,x14,2)|bomba(2,x14).
37 [] -filas(x15)| -columnas(x16)| -sensor(x15,x16,2)|bomba(x15,x16-1).
38 [] -filas(x15)| -columnas(x16)| -sensor(x15,x16,2)|bomba(x15-1,x16).
39 [] -columnas(x17)| -(y>1)| -(y<x17)| -sensor(1,y,3)|bomba(1,y-1).
40 [] -columnas(x17)| -(y>1)| -(y<x17)| -sensor(1,y,3)|bomba(1,y+1).
41 [] -columnas(x17)| -(y>1)| -(y<x17)| -sensor(1,y,3)|bomba(2,y).
42 [] -filas(x18)| -columnas(x19)| -(y>1)| -(y<x19)| -sensor(x18,y,3)|bomba(x18,y-1).
43 [] -filas(x18)| -columnas(x19)| -(y>1)| -(y<x19)| -sensor(x18,y,3)|bomba(x18,y+1).
44 [] -filas(x18)| -columnas(x19)| -(y>1)| -(y<x19)| -sensor(x18,y,3)|bomba(x18-1,y).
45 [] -filas(x20)| -(x>1)| -(x<x20)| -sensor(x,1,3)|bomba(x-1,1).
46 [] -filas(x20)| -(x>1)| -(x<x20)| -sensor(x,1,3)|bomba(x+1,1).
47 [] -filas(x20)| -(x>1)| -(x<x20)| -sensor(x,1,3)|bomba(x,2).
48 [] -filas(x21)| -columnas(x22)| -(x>1)| -(x<x21)| -sensor(x,x22,3)|bomba(x-1,x22).
49 [] -filas(x21)| -columnas(x22)| -(x>1)| -(x<x21)| -sensor(x,x22,3)|bomba(x+1,x22).
50 [] -filas(x21)| -columnas(x22)| -(x>1)| -(x<x21)| -sensor(x,x22,3)|bomba(x,x22-1).
51 [] -filas(x23)| -columnas(x24)| -(x>1)| -(x<x23)| -(y>1)| -(y<x24)| -sensor(x,y,4)|bomba(x-1,y).
52 [] -filas(x23)| -columnas(x24)| -(x>1)| -(x<x23)| -(y>1)| -(y<x24)| -sensor(x,y,4)|bomba(x+1,y).
53 [] -filas(x23)| -columnas(x24)| -(x>1)| -(x<x23)| -(y>1)| -(y<x24)| -sensor(x,y,4)|bomba(x,y-1).
54 [] -filas(x23)| -columnas(x24)| -(x>1)| -(x<x23)| -(y>1)| -(y<x24)| -sensor(x,y,4)|bomba(x,y+1).
55 [] -sensor(1,1,1)|bomba(1,2)|vacio(1,2).
56 [] -sensor(1,1,1)|bomba(1,2)|bomba(2,1).
57 [] -sensor(1,1,1)|vacio(2,1)|vacio(1,2).
58 [] -sensor(1,1,1)|vacio(2,1)|bomba(2,1).
59 [] -filas(x25)| -sensor(x25,1,1)|bomba(x25-1,1)|vacio(x25-1,1).
60 [] -filas(x25)| -sensor(x25,1,1)|bomba(x25-1,1)|bomba(x25,2).
61 [] -filas(x25)| -sensor(x25,1,1)|vacio(x25,2)|vacio(x25-1,1).
62 [] -filas(x25)| -sensor(x25,1,1)|vacio(x25,2)|bomba(x25,2).
63 [] -columnas(x26)| -sensor(1,x26,1)|bomba(2,x26)|vacio(2,x26).
64 [] -columnas(x26)| -sensor(1,x26,1)|bomba(2,x26)|bomba(1,x26-1).
65 [] -columnas(x26)| -sensor(1,x26,1)|vacio(1,x26-1)|vacio(2,x26).
66 [] -columnas(x26)| -sensor(1,x26,1)|vacio(1,x26-1)|bomba(1,x26-1).
67 [] -filas(x27)| -columnas(x28)| -sensor(x27,x28,1)|bomba(x27,x28-1)|vacio(x27,x28-1).
68 [] -filas(x27)| -columnas(x28)| -sensor(x27,x28,1)|bomba(x27,x28-1)|bomba(x27-1,x28).
69 [] -filas(x27)| -columnas(x28)| -sensor(x27,x28,1)|vacio(x27-1,x28)|vacio(x27,x28-1).
70 [] -filas(x27)| -columnas(x28)| -sensor(x27,x28,1)|vacio(x27-1,x28)|bomba(x27-1,x28).
71 [] -columnas(x29)| -(y>1)| -(y<x29)| -sensor(1,y,1)|bomba(1,y-1)|vacio(1,y-1).
72 [] -columnas(x29)| -(y>1)| -(y<x29)| -sensor(1,y,1)|bomba(1,y-1)|bomba(1,y+1)|bomba(2,y).
73 [] -columnas(x29)| -(y>1)| -(y<x29)| -sensor(1,y,1)|vacio(1,y+1)|vacio(1,y-1).
74 [] -columnas(x29)| -(y>1)| -(y<x29)| -sensor(1,y,1)|vacio(1,y+1)|bomba(1,y+1).
75 [] -columnas(x29)| -(y>1)| -(y<x29)| -sensor(1,y,1)|vacio(1,y+1)|vacio(2,y).
76 [] -columnas(x29)| -(y>1)| -(y<x29)| -sensor(1,y,1)|vacio(2,y)|vacio(1,y-1).
77 [] -columnas(x29)| -(y>1)| -(y<x29)| -sensor(1,y,1)|vacio(2,y)|bomba(2,y).
78 [] -filas(x30)| -columnas(x31)| -(y>1)| -(y<x31)| -sensor(x30,y,1)|bomba(x30,y-1)|vacio(x30,y-1).
79 [] -filas(x30)| -columnas(x31)| -(y>1)| -(y<x31)| -sensor(x30,y,1)|bomba(x30,y-1)|bomba(x30,y+1)|bomba(x30-1,y).
80 [] -filas(x30)| -columnas(x31)| -(y>1)| -(y<x31)| -sensor(x30,y,1)|vacio(x30,y+1)|vacio(x30,y-1).
81 [] -filas(x30)| -columnas(x31)| -(y>1)| -(y<x31)| -sensor(x30,y,1)|vacio(x30,y+1)|bomba(x30,y+1).
82 [] -filas(x30)| -columnas(x31)| -(y>1)| -(y<x31)| -sensor(x30,y,1)|vacio(x30,y+1)|vacio(x30-1,y).
83 [] -filas(x30)| -columnas(x31)| -(y>1)| -(y<x31)| -sensor(x30,y,1)|vacio(x30-1,y)|vacio(x30,y-1).
84 [] -filas(x30)| -columnas(x31)| -(y>1)| -(y<x31)| -sensor(x30,y,1)|vacio(x30-1,y)|bomba(x30-1,y).
85 [] -filas(x32)| -(x>1)| -(x<x32)| -sensor(x,1,1)|bomba(x-1,1)|vacio(x-1,1).
86 [] -filas(x32)| -(x>1)| -(x<x32)| -sensor(x,1,1)|bomba(x-1,1)|bomba(x+1,1)|bomba(x,2).
87 [] -filas(x32)| -(x>1)| -(x<x32)| -sensor(x,1,1)|vacio(x+1,1)|vacio(x-1,1).
88 [] -filas(x32)| -(x>1)| -(x<x32)| -sensor(x,1,1)|vacio(x+1,1)|bomba(x+1,1).
89 [] -filas(x32)| -(x>1)| -(x<x32)| -sensor(x,1,1)|vacio(x+1,1)|vacio(x,2).
90 [] -filas(x32)| -(x>1)| -(x<x32)| -sensor(x,1,1)|vacio(x,2)|vacio(x-1,1).
91 [] -filas(x32)| -(x>1)| -(x<x32)| -sensor(x,1,1)|vacio(x,2)|bomba(x,2).
92 [] -filas(x33)| -columnas(x34)| -(x>1)| -(x<x33)| -sensor(x,x34,1)|bomba(x-1,x34)|vacio(x-1,x34).
93 [] -filas(x33)| -columnas(x34)| -(x>1)| -(x<x33)| -sensor(x,x34,1)|bomba(x-1,x34)|bomba(x+1,x34)|bomba(x,x34-1).
94 [] -filas(x33)| -columnas(x34)| -(x>1)| -(x<x33)| -sensor(x,x34,1)|vacio(x+1,x34)|vacio(x-1,x34).
95 [] -filas(x33)| -columnas(x34)| -(x>1)| -(x<x33)| -sensor(x,x34,1)|vacio(x+1,x34)|bomba(x+1,x34).
96 [] -filas(x33)| -columnas(x34)| -(x>1)| -(x<x33)| -sensor(x,x34,1)|vacio(x+1,x34)|vacio(x,x34-1).
97 [] -filas(x33)| -columnas(x34)| -(x>1)| -(x<x33)| -sensor(x,x34,1)|vacio(x,x34-1)|vacio(x-1,x34).
98 [] -filas(x33)| -columnas(x34)| -(x>1)| -(x<x33)| -sensor(x,x34,1)|vacio(x,x34-1)|bomba(x,x34-1).
99 [] -columnas(x35)| -(y>1)| -(y<x35)| -sensor(1,y,2)|bomba(1,y-1)|vacio(1,y-1).
100 [] -columnas(x35)| -(y>1)| -(y<x35)| -sensor(1,y,2)|bomba(1,y-1)|bomba(1,y+1).
101 [] -columnas(x35)| -(y>1)| -(y<x35)| -sensor(1,y,2)|bomba(1,y-1)|bomba(2,y).
102 [] -columnas(x35)| -(y>1)| -(y<x35)| -sensor(1,y,2)|bomba(1,y+1)|vacio(1,y+1).
103 [] -columnas(x35)| -(y>1)| -(y<x35)| -sensor(1,y,2)|bomba(1,y+1)|bomba(2,y).
104 [] -columnas(x35)| -(y>1)| -(y<x35)| -sensor(1,y,2)|vacio(2,y)|vacio(1,y+1)|vacio(1,y-1).
105 [] -columnas(x35)| -(y>1)| -(y<x35)| -sensor(1,y,2)|vacio(2,y)|bomba(2,y).
106 [] -filas(x36)| -columnas(x37)| -(y>1)| -(y<x37)| -sensor(x36,y,2)|bomba(x36,y-1)|vacio(x36,y-1).
107 [] -filas(x36)| -columnas(x37)| -(y>1)| -(y<x37)| -sensor(x36,y,2)|bomba(x36,y-1)|bomba(x36,y+1).
108 [] -filas(x36)| -columnas(x37)| -(y>1)| -(y<x37)| -sensor(x36,y,2)|bomba(x36,y-1)|bomba(x36-1,y).
109 [] -filas(x36)| -columnas(x37)| -(y>1)| -(y<x37)| -sensor(x36,y,2)|bomba(x36,y+1)|vacio(x36,y+1).
110 [] -filas(x36)| -columnas(x37)| -(y>1)| -(y<x37)| -sensor(x36,y,2)|bomba(x36,y+1)|bomba(x36-1,y).
111 [] -filas(x36)| -columnas(x37)| -(y>1)| -(y<x37)| -sensor(x36,y,2)|vacio(x36-1,y)|vacio(x36,y+1)|vacio(x36,y-1).
112 [] -filas(x36)| -columnas(x37)| -(y>1)| -(y<x37)| -sensor(x36,y,2)|vacio(x36-1,y)|bomba(x36-1,y).
113 [] -filas(x38)| -(x>1)| -(x<x38)| -sensor(x,1,2)|bomba(x-1,1)|vacio(x-1,1).
114 [] -filas(x38)| -(x>1)| -(x<x38)| -sensor(x,1,2)|bomba(x-1,1)|bomba(x+1,1).
115 [] -filas(x38)| -(x>1)| -(x<x38)| -sensor(x,1,2)|bomba(x-1,1)|bomba(x,2).
116 [] -filas(x38)| -(x>1)| -(x<x38)| -sensor(x,1,2)|bomba(x+1,1)|vacio(x+1,1).
117 [] -filas(x38)| -(x>1)| -(x<x38)| -sensor(x,1,2)|bomba(x+1,1)|bomba(x,2).
118 [] -filas(x38)| -(x>1)| -(x<x38)| -sensor(x,1,2)|vacio(x,2)|vacio(x+1,1)|vacio(x-1,1).
119 [] -filas(x38)| -(x>1)| -(x<x38)| -sensor(x,1,2)|vacio(x,2)|bomba(x,2).
120 [] -filas(x39)| -columnas(x40)| -(x>1)| -(x<x39)| -sensor(x,x40,2)|bomba(x-1,x40)|vacio(x-1,x40).
121 [] -filas(x39)| -columnas(x40)| -(x>1)| -(x<x39)| -sensor(x,x40,2)|bomba(x-1,x40)|bomba(x+1,x40).
122 [] -filas(x39)| -columnas(x40)| -(x>1)| -(x<x39)| -sensor(x,x40,2)|bomba(x-1,x40)|bomba(x,x40-1).
123 [] -filas(x39)| -columnas(x40)| -(x>1)| -(x<x39)| -sensor(x,x40,2)|bomba(x+1,x40)|vacio(x+1,x40).
124 [] -filas(x39)| -columnas(x40)| -(x>1)| -(x<x39)| -sensor(x,x40,2)|bomba(x+1,x40)|bomba(x,x40-1).
125 [] -filas(x39)| -columnas(x40)| -(x>1)| -(x<x39)| -sensor(x,x40,2)|vacio(x,x40-1)|vacio(x+1,x40)|vacio(x-1,x40).
126 [] -filas(x39)| -columnas(x40)| -(x>1)| -(x<x39)| -sensor(x,x40,2)|vacio(x,x40-1)|bomba(x,x40-1).
127 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|bomba(x-1,y)|vacio(x-1,y).
128 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|bomba(x-1,y)|bomba(x+1,y)|bomba(x,y-1)|bomba(x,y+1).
129 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x+1,y)|vacio(x-1,y).
130 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x+1,y)|bomba(x+1,y).
131 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x+1,y)|vacio(x,y-1).
132 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x+1,y)|vacio(x,y+1).
133 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x,y-1)|vacio(x-1,y).
134 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x,y-1)|bomba(x,y-1).
135 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x,y-1)|vacio(x,y+1).
136 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x,y+1)|vacio(x-1,y).
137 [] -filas(x41)| -columnas(x42)| -(x>1)| -(x<x41)| -(y>1)| -(y<x42)| -sensor(x,y,1)|vacio(x,y+1)|bomba(x,y+1).
138 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x-1,y)|vacio(x-1,y).
139 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x-1,y)|bomba(x+1,y)|bomba(x,y-1).
140 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x-1,y)|bomba(x+1,y)|bomba(x,y+1).
141 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x-1,y)|bomba(x,y-1)|bomba(x,y+1).
142 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x+1,y)|vacio(x+1,y).
143 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x+1,y)|bomba(x,y-1)|bomba(x,y+1).
144 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|vacio(x,y-1)|vacio(x-1,y)|vacio(x+1,y).
145 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|vacio(x,y-1)|vacio(x-1,y)|vacio(x,y+1).
146 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|vacio(x,y-1)|bomba(x,y-1).
147 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|vacio(x,y-1)|vacio(x,y+1)|vacio(x+1,y).
148 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|vacio(x,y+1)|vacio(x-1,y)|vacio(x+1,y).
149 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|vacio(x,y+1)|bomba(x,y+1).
150 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x-1,y)|vacio(x-1,y).
151 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x-1,y)|bomba(x+1,y).
152 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x-1,y)|bomba(x,y-1).
153 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x-1,y)|bomba(x,y+1).
154 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x+1,y)|vacio(x+1,y).
155 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x+1,y)|bomba(x,y-1).
156 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x+1,y)|bomba(x,y+1).
157 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x,y-1)|vacio(x,y-1).
158 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|bomba(x,y-1)|bomba(x,y+1).
159 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|vacio(x,y+1)|vacio(x,y-1)|vacio(x+1,y)|vacio(x-1,y).
160 [] -filas(x45)| -columnas(x46)| -(x>1)| -(x<x45)| -(y>1)| -(y<x46)| -sensor(x,y,3)|vacio(x,y+1)|bomba(x,y+1).
end_of_list.

formula_list(sos).
filas(5).
columnas(5).
sensor(1,3,3).
sensor(2,4,2).
sensor(3,2,0).
sensor(4,1,1).
sensor(4,3,2).
sensor(4,5,2).
sensor(5,4,2).
end_of_list.

-------> sos clausifies to:

list(sos).
161 [] filas(5).
162 [] columnas(5).
163 [] sensor(1,3,3).
164 [] sensor(2,4,2).
165 [] sensor(3,2,0).
166 [] sensor(4,1,1).
167 [] sensor(4,3,2).
168 [] sensor(4,5,2).
169 [] sensor(5,4,2).
end_of_list.

formula_list(passive).
all x y (bomba(x,y)->$ANS(bomba(x,y))).
end_of_list.

-------> passive clausifies to:

list(passive).
170 [] -bomba(x,y)|$ANS(bomba(x,y)).
end_of_list.

======= end of input processing =======

=========== start of search ===========

given clause #1: (wt=2) 161 [] filas(5).

given clause #2: (wt=2) 162 [] columnas(5).

given clause #3: (wt=4) 163 [] sensor(1,3,3).
** KEPT (pick-wt=3): 171 [hyper,163,41,162,eval,eval] bomba(2,3).

----> UNIT CONFLICT at   0.01 sec ----> 172 [binary,171.1,170.1] $ANS(bomba(2,3)).

Length of proof is 1.  Level of proof is 1.

---------------- PROOF ----------------

41 [] -columnas(x17)| -(y>1)| -(y<x17)| -sensor(1,y,3)|bomba(2,y).
162 [] columnas(5).
163 [] sensor(1,3,3).
170 [] -bomba(x,y)|$ANS(bomba(x,y)).
171 [hyper,163,41,162,eval,eval] bomba(2,3).
172 [binary,171.1,170.1] $ANS(bomba(2,3)).

------------ end of proof -------------

** KEPT (pick-wt=3): 173 [hyper,163,40,162,eval,eval,demod] bomba(1,4).

----> UNIT CONFLICT at   0.01 sec ----> 174 [binary,173.1,170.1] $ANS(bomba(1,4)).

Length of proof is 1.  Level of proof is 1.

---------------- PROOF ----------------

40 [] -columnas(x17)| -(y>1)| -(y<x17)| -sensor(1,y,3)|bomba(1,y+1).
162 [] columnas(5).
163 [] sensor(1,3,3).
170 [] -bomba(x,y)|$ANS(bomba(x,y)).
173 [hyper,163,40,162,eval,eval,demod] bomba(1,4).
174 [binary,173.1,170.1] $ANS(bomba(1,4)).

------------ end of proof -------------

** KEPT (pick-wt=3): 175 [hyper,163,39,162,eval,eval,demod] bomba(1,2).

----> UNIT CONFLICT at   0.01 sec ----> 176 [binary,175.1,170.1] $ANS(bomba(1,2)).

Length of proof is 1.  Level of proof is 1.

---------------- PROOF ----------------

39 [] -columnas(x17)| -(y>1)| -(y<x17)| -sensor(1,y,3)|bomba(1,y-1).
162 [] columnas(5).
163 [] sensor(1,3,3).
170 [] -bomba(x,y)|$ANS(bomba(x,y)).
175 [hyper,163,39,162,eval,eval,demod] bomba(1,2).
176 [binary,175.1,170.1] $ANS(bomba(1,2)).

------------ end of proof -------------

175 back subsumes 56.
175 back subsumes 55.
175 back subsumes 31.

given clause #4: (wt=3) 171 [hyper,163,41,162,eval,eval] bomba(2,3).

given clause #5: (wt=3) 173 [hyper,163,40,162,eval,eval,demod] bomba(1,4).

given clause #6: (wt=3) 175 [hyper,163,39,162,eval,eval,demod] bomba(1,2).

given clause #7: (wt=4) 164 [] sensor(2,4,2).
** KEPT (pick-wt=6): 177 [hyper,164,149,161,162,eval,eval,eval,eval,demod] vacio(2,5)|bomba(2,5).
** KEPT (pick-wt=9): 178 [hyper,164,148,161,162,eval,eval,eval,eval,demod] vacio(2,5)|vacio(1,4)|vacio(3,4).
** KEPT (pick-wt=9): 179 [hyper,164,147,161,162,eval,eval,eval,eval,demod] vacio(2,3)|vacio(2,5)|vacio(3,4).
** KEPT (pick-wt=9): 180 [hyper,164,145,161,162,eval,eval,eval,eval,demod] vacio(2,3)|vacio(1,4)|vacio(2,5).
** KEPT (pick-wt=9): 181 [hyper,164,144,161,162,eval,eval,eval,eval,demod] vacio(2,3)|vacio(1,4)|vacio(3,4).
** KEPT (pick-wt=6): 182 [hyper,164,142,161,162,eval,eval,eval,eval,demod] bomba(3,4)|vacio(3,4).

given clause #8: (wt=4) 165 [] sensor(3,2,0).
** KEPT (pick-wt=3): 183 [hyper,165,30,161,162,eval,eval,eval,eval,demod] vacio(3,3).
** KEPT (pick-wt=3): 184 [hyper,165,29,161,162,eval,eval,eval,eval,demod] vacio(3,1).
** KEPT (pick-wt=3): 185 [hyper,165,28,161,162,eval,eval,eval,eval,demod] vacio(4,2).
** KEPT (pick-wt=3): 186 [hyper,165,27,161,162,eval,eval,eval,eval,demod] vacio(2,2).

given clause #9: (wt=3) 183 [hyper,165,30,161,162,eval,eval,eval,eval,demod] vacio(3,3).

given clause #10: (wt=3) 184 [hyper,165,29,161,162,eval,eval,eval,eval,demod] vacio(3,1).

given clause #11: (wt=3) 185 [hyper,165,28,161,162,eval,eval,eval,eval,demod] vacio(4,2).

given clause #12: (wt=3) 186 [hyper,165,27,161,162,eval,eval,eval,eval,demod] vacio(2,2).

given clause #13: (wt=4) 166 [] sensor(4,1,1).
** KEPT (pick-wt=6): 187 [hyper,166,88,161,eval,eval,demod] vacio(5,1)|bomba(5,1).
** KEPT (pick-wt=9): 188 [hyper,166,86,161,eval,eval,demod] bomba(3,1)|bomba(5,1)|bomba(4,2).

given clause #14: (wt=4) 167 [] sensor(4,3,2).
** KEPT (pick-wt=6): 189 [hyper,167,149,161,162,eval,eval,eval,eval,demod] vacio(4,4)|bomba(4,4).
** KEPT (pick-wt=9): 190 [hyper,167,143,161,162,eval,eval,eval,eval,demod] bomba(5,3)|bomba(4,2)|bomba(4,4).
** KEPT (pick-wt=6): 191 [hyper,167,142,161,162,eval,eval,eval,eval,demod] bomba(5,3)|vacio(5,3).
** KEPT (pick-wt=9): 192 [hyper,167,141,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(4,2)|bomba(4,4).
** KEPT (pick-wt=9): 193 [hyper,167,140,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(5,3)|bomba(4,4).
** KEPT (pick-wt=9): 194 [hyper,167,139,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(5,3)|bomba(4,2).

given clause #15: (wt=4) 168 [] sensor(4,5,2).
** KEPT (pick-wt=9): 195 [hyper,168,125,161,162,eval,eval,demod] vacio(4,4)|vacio(5,5)|vacio(3,5).
** KEPT (pick-wt=6): 196 [hyper,168,124,161,162,eval,eval,demod] bomba(5,5)|bomba(4,4).
** KEPT (pick-wt=6): 197 [hyper,168,123,161,162,eval,eval,demod] bomba(5,5)|vacio(5,5).
** KEPT (pick-wt=6): 198 [hyper,168,122,161,162,eval,eval,demod] bomba(3,5)|bomba(4,4).
** KEPT (pick-wt=6): 199 [hyper,168,121,161,162,eval,eval,demod] bomba(3,5)|bomba(5,5).
** KEPT (pick-wt=6): 200 [hyper,168,120,161,162,eval,eval,demod] bomba(3,5)|vacio(3,5).

given clause #16: (wt=4) 169 [] sensor(5,4,2).
** KEPT (pick-wt=9): 201 [hyper,169,111,161,162,eval,eval,demod] vacio(4,4)|vacio(5,5)|vacio(5,3).
** KEPT (pick-wt=6): 202 [hyper,169,108,161,162,eval,eval,demod] bomba(5,3)|bomba(4,4).
** KEPT (pick-wt=6): 203 [hyper,169,107,161,162,eval,eval,demod] bomba(5,3)|bomba(5,5).
202 back subsumes 193.
202 back subsumes 190.

given clause #17: (wt=6) 177 [hyper,164,149,161,162,eval,eval,eval,eval,demod] vacio(2,5)|bomba(2,5).

given clause #18: (wt=6) 182 [hyper,164,142,161,162,eval,eval,eval,eval,demod] bomba(3,4)|vacio(3,4).

given clause #19: (wt=6) 187 [hyper,166,88,161,eval,eval,demod] vacio(5,1)|bomba(5,1).

given clause #20: (wt=6) 189 [hyper,167,149,161,162,eval,eval,eval,eval,demod] vacio(4,4)|bomba(4,4).

given clause #21: (wt=6) 191 [hyper,167,142,161,162,eval,eval,eval,eval,demod] bomba(5,3)|vacio(5,3).

given clause #22: (wt=6) 196 [hyper,168,124,161,162,eval,eval,demod] bomba(5,5)|bomba(4,4).

given clause #23: (wt=6) 197 [hyper,168,123,161,162,eval,eval,demod] bomba(5,5)|vacio(5,5).

given clause #24: (wt=6) 198 [hyper,168,122,161,162,eval,eval,demod] bomba(3,5)|bomba(4,4).

given clause #25: (wt=6) 199 [hyper,168,121,161,162,eval,eval,demod] bomba(3,5)|bomba(5,5).

given clause #26: (wt=6) 200 [hyper,168,120,161,162,eval,eval,demod] bomba(3,5)|vacio(3,5).

given clause #27: (wt=6) 202 [hyper,169,108,161,162,eval,eval,demod] bomba(5,3)|bomba(4,4).

given clause #28: (wt=6) 203 [hyper,169,107,161,162,eval,eval,demod] bomba(5,3)|bomba(5,5).

given clause #29: (wt=9) 178 [hyper,164,148,161,162,eval,eval,eval,eval,demod] vacio(2,5)|vacio(1,4)|vacio(3,4).
** KEPT (pick-wt=6): 204 [hyper,178,3,173] vacio(2,5)|vacio(3,4).
204 back subsumes 179.
204 back subsumes 178.

given clause #30: (wt=6) 204 [hyper,178,3,173] vacio(2,5)|vacio(3,4).

given clause #31: (wt=9) 180 [hyper,164,145,161,162,eval,eval,eval,eval,demod] vacio(2,3)|vacio(1,4)|vacio(2,5).
** KEPT (pick-wt=6): 205 [hyper,180,3,171] vacio(1,4)|vacio(2,5).
** KEPT (pick-wt=6): 206 [hyper,180,3,173] vacio(2,3)|vacio(2,5).
205 back subsumes 180.

given clause #32: (wt=6) 205 [hyper,180,3,171] vacio(1,4)|vacio(2,5).
** KEPT (pick-wt=3): 207 [hyper,205,3,173] vacio(2,5).
207 back subsumes 206.
207 back subsumes 205.
207 back subsumes 204.
207 back subsumes 177.

given clause #33: (wt=3) 207 [hyper,205,3,173] vacio(2,5).

given clause #34: (wt=9) 181 [hyper,164,144,161,162,eval,eval,eval,eval,demod] vacio(2,3)|vacio(1,4)|vacio(3,4).
** KEPT (pick-wt=6): 208 [hyper,181,3,171] vacio(1,4)|vacio(3,4).
** KEPT (pick-wt=6): 209 [hyper,181,3,173] vacio(2,3)|vacio(3,4).
208 back subsumes 181.

given clause #35: (wt=6) 208 [hyper,181,3,171] vacio(1,4)|vacio(3,4).
** KEPT (pick-wt=3): 210 [hyper,208,3,173] vacio(3,4).
210 back subsumes 209.
210 back subsumes 208.
210 back subsumes 182.

given clause #36: (wt=3) 210 [hyper,208,3,173] vacio(3,4).

given clause #37: (wt=9) 188 [hyper,166,86,161,eval,eval,demod] bomba(3,1)|bomba(5,1)|bomba(4,2).
** KEPT (pick-wt=6): 211 [hyper,188,3,184] bomba(5,1)|bomba(4,2).
** KEPT (pick-wt=6): 212 [hyper,188,3,185] bomba(3,1)|bomba(5,1).
211 back subsumes 188.

given clause #38: (wt=6) 211 [hyper,188,3,184] bomba(5,1)|bomba(4,2).
** KEPT (pick-wt=3): 213 [hyper,211,3,185] bomba(5,1).

----> UNIT CONFLICT at   0.01 sec ----> 214 [binary,213.1,170.1] $ANS(bomba(5,1)).

Length of proof is 5.  Level of proof is 3.

---------------- PROOF ----------------

3 [] -bomba(x,y)| -vacio(x,y).
28 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x+1,y).
29 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x,y-1).
86 [] -filas(x32)| -(x>1)| -(x<x32)| -sensor(x,1,1)|bomba(x-1,1)|bomba(x+1,1)|bomba(x,2).
161 [] filas(5).
162 [] columnas(5).
165 [] sensor(3,2,0).
166 [] sensor(4,1,1).
170 [] -bomba(x,y)|$ANS(bomba(x,y)).
184 [hyper,165,29,161,162,eval,eval,eval,eval,demod] vacio(3,1).
185 [hyper,165,28,161,162,eval,eval,eval,eval,demod] vacio(4,2).
188 [hyper,166,86,161,eval,eval,demod] bomba(3,1)|bomba(5,1)|bomba(4,2).
211 [hyper,188,3,184] bomba(5,1)|bomba(4,2).
213 [hyper,211,3,185] bomba(5,1).
214 [binary,213.1,170.1] $ANS(bomba(5,1)).

------------ end of proof -------------

213 back subsumes 212.
213 back subsumes 211.
213 back subsumes 187.

given clause #39: (wt=3) 213 [hyper,211,3,185] bomba(5,1).

given clause #40: (wt=9) 192 [hyper,167,141,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(4,2)|bomba(4,4).
** KEPT (pick-wt=6): 215 [hyper,192,3,183] bomba(4,2)|bomba(4,4).
** KEPT (pick-wt=6): 216 [hyper,192,3,185] bomba(3,3)|bomba(4,4).
215 back subsumes 192.

given clause #41: (wt=6) 215 [hyper,192,3,183] bomba(4,2)|bomba(4,4).
** KEPT (pick-wt=3): 217 [hyper,215,3,185] bomba(4,4).

----> UNIT CONFLICT at   0.01 sec ----> 218 [binary,217.1,170.1] $ANS(bomba(4,4)).

Length of proof is 5.  Level of proof is 3.

---------------- PROOF ----------------

3 [] -bomba(x,y)| -vacio(x,y).
28 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x+1,y).
30 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x,y+1).
141 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x-1,y)|bomba(x,y-1)|bomba(x,y+1).
161 [] filas(5).
162 [] columnas(5).
165 [] sensor(3,2,0).
167 [] sensor(4,3,2).
170 [] -bomba(x,y)|$ANS(bomba(x,y)).
183 [hyper,165,30,161,162,eval,eval,eval,eval,demod] vacio(3,3).
185 [hyper,165,28,161,162,eval,eval,eval,eval,demod] vacio(4,2).
192 [hyper,167,141,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(4,2)|bomba(4,4).
215 [hyper,192,3,183] bomba(4,2)|bomba(4,4).
217 [hyper,215,3,185] bomba(4,4).
218 [binary,217.1,170.1] $ANS(bomba(4,4)).

------------ end of proof -------------

217 back subsumes 216.
217 back subsumes 215.
217 back subsumes 202.
217 back subsumes 198.
217 back subsumes 196.
217 back subsumes 189.

given clause #42: (wt=3) 217 [hyper,215,3,185] bomba(4,4).

given clause #43: (wt=9) 194 [hyper,167,139,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(5,3)|bomba(4,2).
** KEPT (pick-wt=6): 219 [hyper,194,3,183] bomba(5,3)|bomba(4,2).
** KEPT (pick-wt=6): 220 [hyper,194,3,185] bomba(3,3)|bomba(5,3).
219 back subsumes 194.

given clause #44: (wt=6) 219 [hyper,194,3,183] bomba(5,3)|bomba(4,2).
** KEPT (pick-wt=3): 221 [hyper,219,3,185] bomba(5,3).

----> UNIT CONFLICT at   0.01 sec ----> 222 [binary,221.1,170.1] $ANS(bomba(5,3)).

Length of proof is 5.  Level of proof is 3.

---------------- PROOF ----------------

3 [] -bomba(x,y)| -vacio(x,y).
28 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x+1,y).
30 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x,y+1).
139 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x-1,y)|bomba(x+1,y)|bomba(x,y-1).
161 [] filas(5).
162 [] columnas(5).
165 [] sensor(3,2,0).
167 [] sensor(4,3,2).
170 [] -bomba(x,y)|$ANS(bomba(x,y)).
183 [hyper,165,30,161,162,eval,eval,eval,eval,demod] vacio(3,3).
185 [hyper,165,28,161,162,eval,eval,eval,eval,demod] vacio(4,2).
194 [hyper,167,139,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(5,3)|bomba(4,2).
219 [hyper,194,3,183] bomba(5,3)|bomba(4,2).
221 [hyper,219,3,185] bomba(5,3).
222 [binary,221.1,170.1] $ANS(bomba(5,3)).

------------ end of proof -------------

221 back subsumes 220.
221 back subsumes 219.
221 back subsumes 203.
221 back subsumes 191.

given clause #45: (wt=3) 221 [hyper,219,3,185] bomba(5,3).

given clause #46: (wt=9) 195 [hyper,168,125,161,162,eval,eval,demod] vacio(4,4)|vacio(5,5)|vacio(3,5).
** KEPT (pick-wt=6): 223 [hyper,195,3,217] vacio(5,5)|vacio(3,5).
223 back subsumes 195.

given clause #47: (wt=6) 223 [hyper,195,3,217] vacio(5,5)|vacio(3,5).

given clause #48: (wt=9) 201 [hyper,169,111,161,162,eval,eval,demod] vacio(4,4)|vacio(5,5)|vacio(5,3).
** KEPT (pick-wt=6): 224 [hyper,201,3,217] vacio(5,5)|vacio(5,3).
** KEPT (pick-wt=9): 225 [hyper,201,3,199] vacio(4,4)|vacio(5,3)|bomba(3,5).
** KEPT (pick-wt=6): 226 [hyper,201,3,221] vacio(4,4)|vacio(5,5).
224 back subsumes 201.

given clause #49: (wt=6) 224 [hyper,201,3,217] vacio(5,5)|vacio(5,3).
** KEPT (pick-wt=6): 227 [hyper,224,3,199] vacio(5,3)|bomba(3,5).
** KEPT (pick-wt=3): 228 [hyper,224,3,221] vacio(5,5).
227 back subsumes 225.
228 back subsumes 226.
228 back subsumes 224.
228 back subsumes 223.
228 back subsumes 197.

given clause #50: (wt=3) 228 [hyper,224,3,221] vacio(5,5).
** KEPT (pick-wt=3): 229 [hyper,228,3,199] bomba(3,5).

----> UNIT CONFLICT at   0.01 sec ----> 230 [binary,229.1,170.1] $ANS(bomba(3,5)).

Length of proof is 13.  Level of proof is 6.

---------------- PROOF ----------------

3 [] -bomba(x,y)| -vacio(x,y).
28 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x+1,y).
30 [] -filas(x11)| -columnas(x12)| -(x>1)| -(x<x11)| -(y>1)| -(y<x12)| -sensor(x,y,0)|vacio(x,y+1).
111 [] -filas(x36)| -columnas(x37)| -(y>1)| -(y<x37)| -sensor(x36,y,2)|vacio(x36-1,y)|vacio(x36,y+1)|vacio(x36,y-1).
121 [] -filas(x39)| -columnas(x40)| -(x>1)| -(x<x39)| -sensor(x,x40,2)|bomba(x-1,x40)|bomba(x+1,x40).
139 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x-1,y)|bomba(x+1,y)|bomba(x,y-1).
141 [] -filas(x43)| -columnas(x44)| -(x>1)| -(x<x43)| -(y>1)| -(y<x44)| -sensor(x,y,2)|bomba(x-1,y)|bomba(x,y-1)|bomba(x,y+1).
161 [] filas(5).
162 [] columnas(5).
165 [] sensor(3,2,0).
167 [] sensor(4,3,2).
168 [] sensor(4,5,2).
169 [] sensor(5,4,2).
170 [] -bomba(x,y)|$ANS(bomba(x,y)).
183 [hyper,165,30,161,162,eval,eval,eval,eval,demod] vacio(3,3).
185 [hyper,165,28,161,162,eval,eval,eval,eval,demod] vacio(4,2).
192 [hyper,167,141,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(4,2)|bomba(4,4).
194 [hyper,167,139,161,162,eval,eval,eval,eval,demod] bomba(3,3)|bomba(5,3)|bomba(4,2).
199 [hyper,168,121,161,162,eval,eval,demod] bomba(3,5)|bomba(5,5).
201 [hyper,169,111,161,162,eval,eval,demod] vacio(4,4)|vacio(5,5)|vacio(5,3).
215 [hyper,192,3,183] bomba(4,2)|bomba(4,4).
217 [hyper,215,3,185] bomba(4,4).
219 [hyper,194,3,183] bomba(5,3)|bomba(4,2).
221 [hyper,219,3,185] bomba(5,3).
224 [hyper,201,3,217] vacio(5,5)|vacio(5,3).
228 [hyper,224,3,221] vacio(5,5).
229 [hyper,228,3,199] bomba(3,5).
230 [binary,229.1,170.1] $ANS(bomba(3,5)).

------------ end of proof -------------

229 back subsumes 227.
229 back subsumes 200.
229 back subsumes 199.

given clause #51: (wt=3) 229 [hyper,228,3,199] bomba(3,5).

Search stopped because sos empty.

============ end of search ============

-------------- statistics -------------
clauses given                 51
clauses generated            138
  hyper_res generated        138
demod & eval rewrites        110
clauses wt,lit,sk delete       0
tautologies deleted            0
clauses forward subsumed      85
  (subsumed by sos)           30
unit deletions                 0
factor simplifications         0
clauses kept                  53
new demodulators               0
empty clauses                  7
clauses back demodulated       0
clauses back subsumed         42
usable size                  180
sos size                       0
demodulators size              0
passive size                   1
hot size                       0
Kbytes malloced             1953

----------- times (seconds) -----------
user CPU time          0.01          (0 hr, 0 min, 0 sec)
system CPU time        0.00          (0 hr, 0 min, 0 sec)
wall-clock time        0             (0 hr, 0 min, 0 sec)

That finishes the proof of the theorem.

Process 9627 finished Wed Dec 14 18:50:47 2022
