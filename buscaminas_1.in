set(hyper_res).
assign(max_proofs,-1).

% Lenguaje del Problema
%
% Propiedades:
% - filas(x): Hay x filas en la cuadricúla
% - columnas(x): Hay x columnas en la cuadricúla
% - sensor(x,y,z): En la casilla de coordenadas (x,y) hay un sensor que detecta z bombas
% - bomba(x,y): Hay una bomba en la casilla de coordenadas (x,y)
% - vacio(x,y): La casilla de coordenas (x,y) está vacía
%

make_evaluable(_>_, $GT(_,_)).
make_evaluable(_<_, $LT(_,_)).
make_evaluable(_<=_, $LE(_,_)).
make_evaluable(_+_, $SUM(_,_)).
make_evaluable(_-_, $DIFF(_,_)).

formula_list(usable).

    % Cada celda solo puede tener un estado
    all x y z (vacio(x,y) -> (-bomba(x,y) & -sensor(x,y,z))).
    all x y z (bomba(x,y) -> (-vacio(x,y) & -sensor(x,y,z))).
    all x y z (sensor(x,y,z) -> (-vacio(x,y) & -bomba(x,y))).   

    %% Sensores que no detectan nada...

    % En las esquinas del tablero
    sensor(1,1,0) -> (vacio(1,2) & vacio(2,1)).
    all f ((filas(f) & sensor(f,1,0)) -> (vacio(f-1,1) & vacio(f,2))).
    all c ((columnas(c) & sensor(1,c,0)) -> (vacio(1,c-1) & vacio(2,c))).
    all f c ((filas(f) & columnas(c) & sensor(f,c,0)) -> (vacio(f,c-1) & vacio(f-1,c))).

    % En los lados del tablero
    all y c ((columnas(c) & y>1 & y<c & sensor(1,y,0)) -> (vacio(1,y-1) & vacio(1,y+1) & vacio(2,y))).
    all y f c ((filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,0)) -> (vacio(f,y-1) & vacio(f,y+1) & vacio(f-1,y))).
    all x f ((filas(f) & x>1 & x<f & sensor(x,1,0)) -> (vacio(x-1,1) & vacio(x+1,1) & vacio(x,2))).
    all x f c ((filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,0)) -> (vacio(x-1,c) & vacio(x+1,c) & vacio(x,c-1))).

    % En el medio del tablero
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,0)) -> (vacio(x-1,y) & vacio(x+1,y) & vacio(x,y-1) & vacio(x,y+1))).

    %% Sensores que detectan una bomba en cada celda vecina...

    % En las esquinas del tablero (2 bombas)
    sensor(1,1,2) -> (bomba(1, 2) & bomba(2,1)).
    all f ((filas(f) & sensor(f,1,2)) -> (bomba(f-1,1) & bomba(f,2))).
    all c ((columnas(c) & sensor(1,c,2)) -> (bomba(1,c-1) & bomba(2,c))).
    all f c ((filas(f) & columnas(c) & sensor(f,c,2)) -> (bomba(f,c-1) & bomba(f-1,c))).

    % En los lados del tablero (3 bombas)
    all y c ((columnas(c) & y>1 & y<c & sensor(1,y,3)) -> (bomba(1,y-1) & bomba(1,y+1) & bomba(2,y))).
    all y f c ((filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,3)) -> (bomba(f,y-1) & bomba(f,y+1) & bomba(f-1,y))).
    all x f ((filas(f) & x>1 & x<f & sensor(x,1,3)) -> (bomba(x-1,1) & bomba(x+1,1) & bomba(x,2))).
    all x f c ((filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,3)) -> (bomba(x-1,c) & bomba(x+1,c) & bomba(x,c-1))).

    % En el medio del tablero (4 bombas)
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,4)) -> (bomba(x-1,y) & bomba(x+1,y) & bomba(x,y-1) & bomba(x,y+1))).

    %% Sensores que detectan algo...

    % En las esquinas del tablero (solo 1 bomba posible)

    % En general, hay que una celda sea vacia y la otra con una bomba  
    sensor(1,1,1) -> (((bomba(1,2) & vacio(2,1)) | (vacio(1,2) & bomba(2,1)))).
    all f ((filas(f) & sensor(f,1,1)) -> (((bomba(f-1,1) & vacio(f,2)) | (vacio(f-1,1) & bomba(f,2))))).
    all c ((columnas(c) & sensor(1,c,1)) -> (((bomba(2,c) & vacio(1,c-1)) | (vacio(2,c) & bomba(1,c-1))))).
    all f c ((filas(f) & columnas(c) & sensor(f,c,1)) -> (((bomba(f,c-1) & vacio(f-1,c)) | (vacio(f,c-1) & bomba(f-1,c))))).

    % En los lados del tablero (1 bomba)

    % lado arriba

    % En general, hay que dos celdas sean vacias y la otra con una bomba  
    all y c ((columnas(c) & y>1 & y<c & sensor(1,y,1)) -> (((bomba(1,y-1) & vacio(1,y+1) & vacio(2,y)) | (vacio(1,y-1) & bomba(1,y+1) & vacio(2,y)) | (vacio(1,y-1) & vacio(1,y+1) & bomba(2,y))))).

    % lado abajo

    % En general, hay que dos celdas sean vacias y la otra con una bomba
    all y f c ((filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,1)) -> (((bomba(f,y-1) & vacio(f,y+1) & vacio(f-1,y)) | (vacio(f,y-1) & bomba(f,y+1) & vacio(f-1,y)) | (vacio(f,y-1) & vacio(f,y+1) & bomba(f-1,y))))).
  
    % lado izquierdo

    % En general, hay que dos celdas sean vacias y la otra con una bomba
    all x f ((filas(f) & x>1 & x<f & sensor(x,1,1)) -> (((bomba(x-1,1) & vacio(x+1,1) & vacio(x,2)) | (vacio(x-1,1) & bomba(x+1,1) & vacio(x,2)) | (vacio(x-1,1) & vacio(x+1,1) & bomba(x,2))))).

    % lado derecho

    % En general, hay que dos celdas sean vacias y la otra con una bomba
    all x f c ((filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,1)) -> (((bomba(x-1,c) & vacio(x+1,c) & vacio(x,c-1)) | (vacio(x-1,c) & bomba(x+1,c) & vacio(x,c-1)) | (vacio(x-1,c) & vacio(x+1,c) & bomba(x,c-1))))).

    % En los lados del tablero (2 bombas)

    % lado arriba

    % En general, hay que dos celdas sean con bomba y la otra vacía
    all y c ((columnas(c) & y>1 & y<c & sensor(1,y,2)) -> (((bomba(1,y-1) & bomba(1,y+1) & vacio(2,y)) | (bomba(1,y-1) & vacio(1,y+1) & bomba(2,y)) | (vacio(1,y-1) & bomba(1,y+1) & bomba(2,y))))).

    % lado abajo

    % En general, hay que dos celdas sean con bomba y la otra vacía
    all y f c ((filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,2)) -> (((bomba(f,y-1) & bomba(f,y+1) & vacio(f-1,y)) | (bomba(f,y-1) & vacio(f,y+1) & bomba(f-1,y)) | (vacio(f,y-1) & bomba(f,y+1) & bomba(f-1,y))))).

    % lado izquierdo

    % En general, hay que dos celdas sean con bomba y la otra vacía
    all x f ((filas(f) & x>1 & x<f & sensor(x,1,2)) -> (((bomba(x-1,1) & bomba(x+1,1) & vacio(x,2)) | (bomba(x-1,1) & vacio(x+1,1) & bomba(x,2)) | (vacio(x-1,1) & bomba(x+1,1) & bomba(x,2))))).

    % lado derecho

    % En general, hay que dos celdas sean con bomba y la otra vacía
    all x f c ((filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,2)) -> (((bomba(x-1,c) & bomba(x+1,c) & vacio(x,c-1)) | (bomba(x-1,c) & vacio(x+1,c) & bomba(x,c-1)) | (vacio(x-1,c) & bomba(x+1,c) & bomba(x,c-1))))).


    % En el medio del tablero (1 bomba)

    % En general, hay que tres celdas sean vacías y la otra con bomba
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,1)) -> (((bomba(x-1,y) & vacio(x+1,y) & vacio(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & bomba(x+1,y) & vacio(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & vacio(x+1,y) & bomba(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & vacio(x+1,y) & vacio(x,y-1) & bomba(x,y+1))))).

    % En el medio del tablero (2 bombas)

    % En general, hay que dos celdas sean vacías y las dos otras con bomba
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,2)) -> ((bomba(x-1,y) & bomba(x+1,y) & vacio(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & bomba(x+1,y) & bomba(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & vacio(x+1,y) & bomba(x,y-1) & bomba(x,y+1)) | (bomba(x-1,y) & vacio(x+1,y) & vacio(x,y-1) & bomba(x,y+1)) | (bomba(x-1,y) & vacio(x+1,y) & bomba(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & bomba(x+1,y) & vacio(x,y-1) & bomba(x,y+1)))).

    % En el medio del tablero (3 bombas)

    % En general, hay que tres celdas sean con bomba y la otra vacía
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,3)) -> (((bomba(x-1,y) & bomba(x+1,y) & bomba(x,y-1) & vacio(x,y+1)) | (bomba(x-1,y) & bomba(x+1,y) & vacio(x,y-1) & bomba(x,y+1)) | (bomba(x-1,y) & vacio(x+1,y) & bomba(x,y-1) & bomba(x,y+1)) | (vacio(x-1,y) & bomba(x+1,y) & bomba(x,y-1) & bomba(x,y+1))))).
end_of_list.

formula_list(sos).
    % Situación inicial.
    filas(5).
    columnas(5).
    sensor(1,3,3).
    sensor(2,4,2).
    sensor(3,2,0).
    sensor(4,1,1).
    sensor(4,3,2).
    sensor(4,5,2).
    sensor(5,4,2).
end_of_list.

formula_list(passive).
    % Cada vez que encontramos a una bomba, la devolvemos como respuesta.
    all x y (bomba(x,y) -> $ANS(bomba(x,y))).
end_of_list.
