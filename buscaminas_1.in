%set(para_into).
%set(para_from).
set(binary_res).

% Lenguaje del Problema
%
% Funciones:
% vecinos(x,y): El nombre de casillas vecinas que tiene la casilla de coordenadas (x,y).
%
% Propiedades:
% - filas(x): Hay x filas en la cuadricúla
% - columnas(x): Hay x columnas en la cuadricúla
% - sensor(x,y,z): En la casilla de coordenadas (x,y) hay un sensor que detecta z bombas
% - bomba(x,y): Hay una bomba en la casilla de coordenadas (x,y)
% - vacio(x,y): La casilla de coordenas (x,y) está vacía


%list(demodulators).
    %TODO: anzahl filas und columnas hier berücksichtigen
%    vecinos(x,y) = 
%        $IF($EQ(x,1) | $EQ(x,num_filas),
%            $IF($EQ(y,1) | $EQ(y,num_col),
%                2,
%                3),
%            $IF($EQ(y,1) | $EQ(y,num_col),
%                3,
%                4)
%    ).
%end_of_list.

make_evaluable(_>_, $GT(_,_)).
make_evaluable(_<_, $LT(_,_)).
make_evaluable(_<=_, $LE(_,_)).
make_evaluable(_+_, $SUM(_,_)).
make_evaluable(_-_, $DIFF(_,_)).

formula_list(usable).
    % Sensores que no detectan nada.
    % En el medio del tablero
    all x y f c (filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,0) -> vacio(x-1, y) & vacio(x+1,y) & vacio(x,y-1) & vacio(x,y+1)).
    % En los lados del tablero
    all y c (columnas(c) & y>1 & y<c & sensor(1,y,0) -> vacio(1, y-1) & vacio(1,y+1) & vacio(2,y)).
    all y f c (filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,0) -> vacio(f, y-1) & vacio(f,y+1) & vacio(f-1,y)).
    all x f (filas(f) & x>1 & x<f & sensor(x,1,0) -> vacio(x-1, 1) & vacio(x+1,1) & vacio(x,2)).
    all x f c (filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,0) -> vacio(x-1, c) & vacio(x+1,c) & vacio(x,c-1)).

    % En las esquinas del tablero
    sensor(1,1,0) -> vacio(1, 2) & vacio(2,1).
    all f (filas(f) & sensor(f,1,0) -> vacio(f-1, 1) & vacio(f,2)).
    all c (columnas(c) & sensor(1,c,0) -> vacio(1, c-1) & vacio(2,c)).
    all f c (filas(f) & columnas(c) & sensor(f,c,0) -> vacio(f, c-1) & vacio(f-1,c)).

    % Sensores que detectan una bomba en cada celda vecina.
    % En las esquinas del tablero
    sensor(1,1,2) -> bomba(1, 2) & bomba(2,1).
    all f (filas(f) & sensor(f,1,2) -> bomba(f-1, 1) & bomba(f,2)).
    all c (columnas(c) & sensor(1,c,2) -> bomba(1, c-1) & bomba(2,c)).
    all f c (filas(f) & columnas(c) & sensor(f,c,2) -> bomba(f, c-1) & bomba(f-1,c)).
    % En los lados del tablero
    all y c (columnas(c) & y>1 & y<c & sensor(1,y,3) -> bomba(1, y-1) & bomba(1,y+1) & bomba(2,y)).
    all y f c (filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,3) -> bomba(f, y-1) & bomba(f,y+1) & bomba(f-1,y)).
    all x f (filas(f) & x>1 & x<f & sensor(x,1,3) -> bomba(x-1, 1) & bomba(x+1,1) & bomba(x,2)).
    all x f c (filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,3) -> bomba(x-1, c) & bomba(x+1,c) & bomba(x,c-1)).
    % En el medio del tablero
    all x y f c (filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,4) -> bomba(x-1, y) & bomba(x+1,y) & bomba(x,y-1) & bomba(x,y+1)).

end_of_list.

%formula_list(usable).
%
%end_of_list.

%formula_list(passive).
% all x y (posicion(x1,x2,x3,x4) -> $ANS(x1,x2,x3,x4)).
%end_of_list.

formula_list(sos).
    % Situación inicial.
    filas(5).
    columnas(5).
    sensor(1,3,3).
    sensor(2,4,2).
    sensor(3,2,0).
    sensor(4,1,1).
    sensor(4,3,2).
    sensor(4,5,2).
    sensor(5,4,2).

    % Situación final.
    %-(all x y f c((filas(f) & columnas(c) & x > 0 & x <= f & y > 0 & y <= c) -> (bomba(x,y) | vacio(x,y) | sensor(x,y,z)))).
    %TODO: wie kann ich hier die range triggern? will alle zahlen zw 1 und 5 haben und nicht nur die die bereits vorhanden sind
    -(all x y f c ((filas(f) & columnas(c)& x>0 & x<=f & y>0 & y<=c) -> ((bomba(x,y) | vacio(x,y) | (exists z (sensor(x,y,z))))))). 
end_of_list.

