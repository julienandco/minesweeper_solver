set(para_into).
set(para_from).
set(hyper_res).
assign(max_proofs,-1).

% Lenguaje del Problema
%
% Propiedades:
% - filas(x): Hay x filas en la cuadricúla
% - columnas(x): Hay x columnas en la cuadricúla
% - sensor(x,y,z): En la casilla de coordenadas (x,y) hay un sensor que detecta z bombas
% - bomba(x,y): Hay una bomba en la casilla de coordenadas (x,y)
% - vacio(x,y): La casilla de coordenas (x,y) está vacía
%
% - completado(x,y): El sensor en la casilla de coordenadas(x,y) no añade mas información,
%                    i.e. todos las bombas que detectó ya han sido descubiertas.

make_evaluable(_>_, $GT(_,_)).
make_evaluable(_<_, $LT(_,_)).
make_evaluable(_<=_, $LE(_,_)).
make_evaluable(_+_, $SUM(_,_)).
make_evaluable(_-_, $DIFF(_,_)).

list(demodulators).
    pertenece(x,[]) = $F.
    pertenece(x,[y|w]) = $IF($ID(x,y), $T, pertenece(x,w)).

    len([]) = 0.
    len([y|w]) = 1+len(w).
end_of_list.

formula_list(usable).

    % Cada celda solo puede tener un estado
    all x y z (vacio(x,y) -> (-bomba(x,y) & -sensor(x,y,z))).
    all x y z (bomba(x,y) -> (-vacio(x,y) & -sensor(x,y,z))).
    all x y z (sensor(x,y,z) -> (-vacio(x,y) & -bomba(x,y))).   

    %% Sensores que no detectan nada...

    % En las esquinas del tablero
    sensor(1,1,0) -> (vacio(1,2) & vacio(2,1) & completado(1,1)).
    all f ((filas(f) & sensor(f,1,0)) -> (vacio(f-1,1) & vacio(f,2) & completado(f,1))).
    all c ((columnas(c) & sensor(1,c,0)) -> (vacio(1,c-1) & vacio(2,c) & completado(1,c))).
    all f c ((filas(f) & columnas(c) & sensor(f,c,0)) -> (vacio(f,c-1) & vacio(f-1,c) & completado(f,c))).

    % En los lados del tablero
    all y c ((columnas(c) & y>1 & y<c & sensor(1,y,0)) -> (vacio(1,y-1) & vacio(1,y+1) & vacio(2,y) & completado(1,y))).
    all y f c ((filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,0)) -> (vacio(f,y-1) & vacio(f,y+1) & vacio(f-1,y) & completado(f,y))).
    all x f ((filas(f) & x>1 & x<f & sensor(x,1,0)) -> (vacio(x-1,1) & vacio(x+1,1) & vacio(x,2) & completado(x,1))).
    all x f c ((filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,0)) -> (vacio(x-1,c) & vacio(x+1,c) & vacio(x,c-1) & completado(x,c))).

    % En el medio del tablero
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,0)) -> (vacio(x-1,y) & vacio(x+1,y) & vacio(x,y-1) & vacio(x,y+1) & completado(x,y))).

    %% Sensores que detectan una bomba en cada celda vecina...

    % En las esquinas del tablero (2 bombas)
    sensor(1,1,2) -> (bomba(1, 2) & bomba(2,1) & completado(1,1)).
    all f ((filas(f) & sensor(f,1,2)) -> (bomba(f-1,1) & bomba(f,2) & completado(f,1))).
    all c ((columnas(c) & sensor(1,c,2)) -> (bomba(1,c-1) & bomba(2,c) & completado(1,c))).
    all f c ((filas(f) & columnas(c) & sensor(f,c,2)) -> (bomba(f,c-1) & bomba(f-1,c) & completado(f,c))).

    % En los lados del tablero (3 bombas)
    all y c ((columnas(c) & y>1 & y<c & sensor(1,y,3)) -> (bomba(1,y-1) & bomba(1,y+1) & bomba(2,y) & completado(1,y))).
    all y f c ((filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,3)) -> (bomba(f,y-1) & bomba(f,y+1) & bomba(f-1,y) & completado(f,y))).
    all x f ((filas(f) & x>1 & x<f & sensor(x,1,3)) -> (bomba(x-1,1) & bomba(x+1,1) & bomba(x,2) & completado(x,1))).
    all x f c ((filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,3)) -> (bomba(x-1,c) & bomba(x+1,c) & bomba(x,c-1) & completado(x,c))).

    % En el medio del tablero (4 bombas)
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,4)) -> (bomba(x-1,y) & bomba(x+1,y) & bomba(x,y-1) & bomba(x,y+1) & completado(x,y))).

    %% Sensores que detectan algo...

    % En las esquinas del tablero (solo 1 bomba posible)

    % En general, hay que una celda sea vacia y la otra con una bomba  
    sensor(1,1,1) -> (((bomba(1,2) & vacio(2,1)) | (vacio(1,2) & bomba(2,1))) & completado(1,1)).
    all f ((filas(f) & sensor(f,1,1)) -> (((bomba(f-1,1) & vacio(f,2)) | (vacio(f-1,1) & bomba(f,2))) & completado(f,1))).
    all c ((columnas(c) & sensor(1,c,1)) -> (((bomba(2,c) & vacio(1,c-1)) | (vacio(2,c) & bomba(1,c-1))) & completado(1,c))).
    all f c ((filas(f) & columnas(c) & sensor(f,c,1)) -> (((bomba(f,c-1) & vacio(f-1,c)) | (vacio(f,c-1) & bomba(f-1,c))) & completado(f,c))).

    % En los lados del tablero (1 bomba)

    % lado arriba

    % En general, hay que dos celdas sean vacias y la otra con una bomba  
    all y c ((columnas(c) & y>1 & y<c & sensor(1,y,1)) -> (((bomba(1,y-1) & vacio(1,y+1) & vacio(2,y)) | (vacio(1,y-1) & bomba(1,y+1) & vacio(2,y)) | (vacio(1,y-1) & vacio(1,y+1) & bomba(2,y))) & completado(1,y))).

    % lado abajo

    % En general, hay que dos celdas sean vacias y la otra con una bomba
    all y f c ((filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,1)) -> (((bomba(f,y-1) & vacio(f,y+1) & vacio(f-1,y)) | (vacio(f,y-1) & bomba(f,y+1) & vacio(f-1,y)) | (vacio(f,y-1) & vacio(f,y+1) & bomba(f-1,y))) & completado(f,y))).
  
    % lado izquierdo

    % En general, hay que dos celdas sean vacias y la otra con una bomba
    all x f ((filas(f) & x>1 & x<f & sensor(x,1,1)) -> (((bomba(x-1,1) & vacio(x+1,1) & vacio(x,2)) | (vacio(x-1,1) & bomba(x+1,1) & vacio(x,2)) | (vacio(x-1,1) & vacio(x+1,1) & bomba(x,2))) & completado(x,1))).

    % lado derecho

    % En general, hay que dos celdas sean vacias y la otra con una bomba
    all x f c ((filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,1)) -> (((bomba(x-1,c) & vacio(x+1,c) & vacio(x,c-1)) | (vacio(x-1,c) & bomba(x+1,c) & vacio(x,c-1)) | (vacio(x-1,c) & vacio(x+1,c) & bomba(x,c-1))) & completado(x,c))).

    % En los lados del tablero (2 bombas)

    % lado arriba

    % En general, hay que dos celdas sean con bomba y la otra vacía
    all y c ((columnas(c) & y>1 & y<c & sensor(1,y,2)) -> (((bomba(1,y-1) & bomba(1,y+1) & vacio(2,y)) | (bomba(1,y-1) & vacio(1,y+1) & bomba(2,y)) | (vacio(1,y-1) & bomba(1,y+1) & bomba(2,y))) & completado(1,y))).

    % lado abajo

    % En general, hay que dos celdas sean con bomba y la otra vacía
    all y f c ((filas(f) & columnas(c) & y>1 & y<c & sensor(f,y,2)) -> (((bomba(f,y-1) & bomba(f,y+1) & vacio(f-1,y)) | (bomba(f,y-1) & vacio(f,y+1) & bomba(f-1,y)) | (vacio(f,y-1) & bomba(f,y+1) & bomba(f-1,y))) & completado(f,y))).

    % lado izquierdo

    % En general, hay que dos celdas sean con bomba y la otra vacía
    all x f ((filas(f) & x>1 & x<f & sensor(x,1,2)) -> (((bomba(x-1,1) & bomba(x+1,1) & vacio(x,2)) | (bomba(x-1,1) & vacio(x+1,1) & bomba(x,2)) | (vacio(x-1,1) & bomba(x+1,1) & bomba(x,2))) & completado(x,1))).

    % lado derecho

    % En general, hay que dos celdas sean con bomba y la otra vacía
    all x f c ((filas(f) & columnas(c) & x>1 & x<f & sensor(x,c,2)) -> (((bomba(x-1,c) & bomba(x+1,c) & vacio(x,c-1)) | (bomba(x-1,c) & vacio(x+1,c) & bomba(x,c-1)) | (vacio(x-1,c) & bomba(x+1,c) & bomba(x,c-1))) & completado(x,c))).


    % En el medio del tablero (1 bomba)

    % En general, hay que tres celdas sean vacías y la otra con bomba
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,1)) -> (((bomba(x-1,y) & vacio(x+1,y) & vacio(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & bomba(x+1,y) & vacio(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & vacio(x+1,y) & bomba(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & vacio(x+1,y) & vacio(x,y-1) & bomba(x,y+1))) & completado(x,y))).

    % En el medio del tablero (2 bombas)

    % En general, hay que dos celdas sean vacías y las dos otras con bomba
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,2)) -> (((bomba(x-1,y) & bomba(x+1,y) & vacio(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & bomba(x+1,y) & bomba(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & vacio(x+1,y) & bomba(x,y-1) & bomba(x,y+1)) | (bomba(x-1,y) & vacio(x+1,y) & vacio(x,y-1) & bomba(x,y+1)) | (bomba(x-1,y) & vacio(x+1,y) & bomba(x,y-1) & vacio(x,y+1)) | (vacio(x-1,y) & bomba(x+1,y) & vacio(x,y-1) & bomba(x,y+1))) & completado(x,y))).

    % En el medio del tablero (3 bombas)

    % En general, hay que tres celdas sean con bomba y la otra vacía
    all x y f c ((filas(f) & columnas(c) & x>1 & x<f & y>1 & y<c & sensor(x,y,3)) -> (((bomba(x-1,y) & bomba(x+1,y) & bomba(x,y-1) & vacio(x,y+1)) | (bomba(x-1,y) & bomba(x+1,y) & vacio(x,y-1) & bomba(x,y+1)) | (bomba(x-1,y) & vacio(x+1,y) & bomba(x,y-1) & bomba(x,y+1)) | (vacio(x-1,y) & bomba(x+1,y) & bomba(x,y-1) & bomba(x,y+1))) & completado(x,y))).
end_of_list.

formula_list(sos).
    % Situación inicial.
    filas(5).
    columnas(5).
    sensor(1,3,3).
    sensor(2,4,2).
    sensor(3,2,0).
    sensor(4,1,1).
    sensor(4,3,2).
    sensor(4,5,2).
    sensor(5,4,2).

    % Situación final. 

    % FRAGE 1
    %-(completado(1,3) & completado(2,4) & completado(3,2) & completado(4,1) & completado(4,3) & completado(4,5) & completado(5,4)).

    % Frage 1 - Formel 2
    %exists x y z (sensor(x,y,z) & -completado(x,y)).

    % Frage 2
    %bombas([]).

    % Cuando encontramos a una nueva bomba, la añadimos a la lista de bombas
    %all x y (bombas([]) & bomba(x,y) -> bombas([bomba(x,y)])).
    %all x y p q (bombas([p|q]) & bomba(x,y) & -pertenece(bomba(x,y),[p|q]) -> bombas([bomba(x,y),p|q])).

end_of_list.

formula_list(passive).
    all x y (bomba(x,y) -> $ANS(bomba(x,y))).

    % Frage 3
    %-(exists a b (bombas([a|b]) & pertenece(bomba(1,2), [a|b]) & pertenece(bomba(1,4), [a|b]) & pertenece(bomba(2,3), [a|b]) & pertenece(bomba(3,5), [a|b]) & pertenece(bomba(4,4), [a|b]) & pertenece(bomba(5,1), [a|b]) & pertenece(bomba(5,3), [a|b]))).

    % Frage 4
    %bomba(1,2) & bomba(1,4) & bomba(2,3) & bomba(3,5) & bomba(4,4) & bomba(5,1) & bomba(5,3) -> $ANS([bomba(1,2),bomba(1,4),bomba(2,3),bomba(3,5),bomba(4,4),bomba(5,1),bomba(5,3)]).

    % Frage 5
    %all a b (bombas([a|b]) & -(exists p q (bombas([p|q]) & len([p|q])>len([a|b]))) -> $ANS([a|b])).
end_of_list.



% Fragen:
% 1) Warum erkennt er diese ungenerische Formulierung, aber die generische Formel 2 nicht?
%
% 2) Darf ich das machen? Mit dem zusätzlichen Fact (Liste von bombas)
%
% 3) Warum erkennt er das nicht? Die Liste existiert nämlich im .out
%
% 4) Wie bekomme ich eine anständige $ANS? So wie es jetzt ist, ist es viel zu ungenerisch.
%
% 5) Meiner Meinung nach der beste Call, aber es terminiert nicht. Why?
%

% maxproofs = -1 -> dann einer $ANS pro bombe die du findest (neue formel bomba -> $ANS) und ganze listen kacke
